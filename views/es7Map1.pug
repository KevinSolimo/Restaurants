html
  head
    title OpenLayers Marker Popups
  body
    #mapdiv
    script(src='https://cdnjs.cloudflare.com/ajax/libs/openlayers/2.11/lib/OpenLayers.js')
    script.
      map = new OpenLayers.Map("mapdiv");
      map.addLayer(new OpenLayers.Layer.OSM());
      epsg4326 =  new OpenLayers.Projection("EPSG:4326"); //WGS 1984 projection
      projectTo = map.getProjectionObject(); //The map projection (Spherical Mercator)
      var lonLat = new OpenLayers.LonLat( -74.0059700 ,40.7142700 ).transform(epsg4326, projectTo);
      var zoom=5;
      map.setCenter (lonLat, zoom);
      var vectorLayer = new OpenLayers.Layer.Vector("Overlay");
      // Define markers as "features" of the vector layer:
    each val in list
      script.
        var feature = new OpenLayers.Feature.Vector(
        new OpenLayers.Geometry.Point( #{val.address[0]},#{val.address[1]} ).transform(epsg4326, projectTo),
        {description:"<h2>#{val.name}</h2><br><h4>#{val.via} #{val.numero}</h4>"} ,
        {externalGraphic: 'img/marker.png', graphicHeight: 25, graphicWidth: 21, graphicXOffset:-12, graphicYOffset:-25  }
        );
        vectorLayer.addFeatures(feature);
    script.
      map.addLayer(vectorLayer);
      //Add a selector control to the vectorLayer with popup functions
      var controls = {
      selector: new OpenLayers.Control.SelectFeature(vectorLayer, { onSelect: createPopup, onUnselect: destroyPopup })
      };
      function createPopup(feature) {
      feature.popup = new OpenLayers.Popup.FramedCloud("pop",
      feature.geometry.getBounds().getCenterLonLat(),
      null,
      '<div class="markerContent">'+feature.attributes.description+'</div>',
      null,
      true,
      function() { controls['selector'].unselectAll(); }
      );
      //feature.popup.closeOnMove = true;
      map.addPopup(feature.popup);
      }
      function destroyPopup(feature) {
      feature.popup.destroy();
      feature.popup = null;
      }
      map.addControl(controls['selector']);
      controls['selector'].activate();
